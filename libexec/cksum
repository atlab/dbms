#! /bin/sh

# cksum: run pt-table-checksum or report on status.

# todo: show global status like 'Threads_running' && --max-load
#   set to 10?? (nproc on db2==16, on db=32)
# todo: make hash functions configurable somehow -
#   current code requires 'fnv1a_64' to be installed.
# chunk strategy:
#   - we have relatively low concurrency on heavy duty queries on big tables
#   - therefore using high chunk time matches regular query load, and 
#     facillitates checksumming large tables.

# notes on showing actual differences -
# really, review pt-table-sync documentation - but, in a nutshell:
#
# to view all differences:
#
#   # pt-table-sync --print --replicate 'percona.checksums'
#
# to push all diffferences:
#
#   # pt-table-sync --execute --replicate 'percona.checksums'
#
# in reality, you probably don't want to auto push all, but instead
# use more arguments to filter down the set of changes and apply carefully.
 

usage_exit() {
	arghelp="[start-full|resume-full|start-partial|resume-partial|report]";
	echo "usage: `basename $0` $arghelp";
	exit 0;
}

sqlreport(){
	# empty if no errors
	mysql -u root -S /var/run/mysqld/mysqld1.sock <<EOF
		SELECT db, tbl, SUM(this_cnt) AS total_rows, COUNT(*) AS chunks
		FROM percona.checksums
		WHERE (
			master_cnt <> this_cnt
			OR master_crc <> this_crc
			OR ISNULL(master_crc) <> ISNULL(this_crc))
		GROUP BY db, tbl;
EOF
}

checksumrun(){
	pt-table-checksum \
		--user root $passarg $socketarg \
		--no-check-binlog-format --nocheck-plan --chunk-time=300 \
		--function 'fnv1a_64' $jobstate $ignore
}

checksumreport() { # TODO: integrate
	/usr/bin/pt-table-checksum \
		--user root \
		$passarg \
		--socket /var/run/mysqld/mysqld1.sock \
		--no-check-binlog-format \
		--ignore-tables-regex '^__' \
		--replicate-check-only
}


# _start:

[ ! -z "$MYSQL_SOCKET" ] && socketarg="--socket $MYSQL_SOCKET" || socketarg=""

pass=`awk -F= '/^pass/{print $2}' ~/.my.cnf`
[ ! -z "$pass" ] && passarg="--password $pass" || passarg=""

case $1 in
	"start-full") 
		ignore=""; 
		jobstate="--truncate-replicate-table"
		checksumrun;;
	"resume-full") 
		ignore=""; 
		jobstate="--resume";
		checksumrun;;
	"start-partial") 
		ignore="--ignore-tables-regex ^__";
		jobstate="--truncate-replicate-table";
		checksumrun;;
	"resume-partial") 
		ignore="--ignore-tables-regex ^__";
		jobstate="--resume";
		checksumrun;;
	"report")
		checksumreport;;
	*)
		usage_exit;;
esac

